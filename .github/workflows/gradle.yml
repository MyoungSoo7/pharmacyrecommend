# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI/CD with Gradle

on:
  push:
    branches: [ "master" ]
 
permissions:
  contents: read

env:
  REGISTRY: ${{ secrets.AWS_ECR_REGISTRY }}
  IMAGE_NAME: pharmacy-recommend  

jobs:
  build:
    name: CI
    runs-on: ubuntu-latest

    steps:
    - name: Pull Repository
      uses: actions/checkout@v3
    
    - name: Set up JDK17 
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Run chmod to make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: build

  # deployment:
  #   name: CD
  #   runs-on: ubuntu-latest
  #   needs: build

  #   steps:
  #     - name: Pull Repository
  #       uses: actions/checkout@v3

  #     - name: Set up JDK17 
  #       uses: actions/setup-java@v3
  #       with:
  #         java-version: '17'
  #         distribution: 'temurin'
        
  #     - name: Run chmod to make gradlew executable
  #       run: chmod +x ./gradlew

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ap-northeast-2
  
  #     - name: Login to Amazon ECR
  #       id: login-ecr
  #       uses: aws-actions/amazon-ecr-login@v1

  #     - name: Extract metadata (tags, labels) for Docker
  #       id: meta
  #       uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
  #       with:
  #         images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
  #         tags: |
  #           type=sha
            
  #     - name: Build, tag, and push docker image to Amazon ECR
  #       id: build-image
  #       env:
  #         REGISTRY: ${{ env.REGISTRY }}
  #         REPOSITORY: ${{ env.IMAGE_NAME }}
  #         IMAGE_TAG: ${{ github.sha }}
  #       run: |
  #         docker build -t $REGISTRY/$REPOSITORY:latest .
  #         docker push $REGISTRY/$REPOSITORY:latest
  #         echo "image=$REGISTRY/$REPOSITORY:latest" >> $GITHUB_OUTPUT       
            
      # - name: Build and push Docker image to Amazon ECR
      #   uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
      #   with:
      #     context: .
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
          
     

      
   
