plugins {
    id 'groovy'
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.lms'
version = '0.0.1-SNAPSHOT'

bootJar {
    archiveFileName = 'app.jar'
}

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // https://github.com/seruco/base62
    implementation 'io.seruco.encoding:base62:0.1.3'

    // handlebars
    implementation 'pl.allegro.tech.boot:handlebars-spring-boot-starter:0.3.4'

    //spock
    testImplementation('org.spockframework:spock-spring:2.1-groovy-3.0')
    testImplementation('org.spockframework:spock-core:2.1-groovy-3.0')

    testImplementation('org.testcontainers:spock:1.17.1')
    testImplementation('org.testcontainers:mariadb:1.17.1')

    // 런타임에 클래스기반 spock mock을 만들기 위해 필요
    testImplementation('net.bytebuddy:byte-buddy:1.12.10')

    // spring retry
    implementation 'org.springframework.retry:spring-retry'

    // mockWebServer
    testImplementation('com.squareup.okhttp3:okhttp:4.10.0')
    testImplementation('com.squareup.okhttp3:mockwebserver:4.10.0')

}

tasks.named('test') {
    useJUnitPlatform()
}

processTestResources{
    boolean hasProperty = project.hasProperty('KAKAO_REST_API_KEY')
    println "hasProperty : " + hasProperty
    filesMatching('**/application.yml'){
        expand(project.properties)
    }

}
